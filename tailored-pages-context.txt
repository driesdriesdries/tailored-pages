Context for Tailored Pages Plugin

Plugin Structure:

/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/.DS_Store
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/.gitignore
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/acf-fields/
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/acf-fields/.DS_Store
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/acf-fields/tailored-pages-fields.json
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/dist/
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/dist/css/
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/dist/css/abstracts/
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/dist/css/abstracts/mixins.css
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/dist/css/style.css
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/generate_context.php
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/gulpfile.js
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/includes/
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/includes/.DS_Store
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/includes/admin/
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/includes/admin/admin-menus.php
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/includes/custom-columns.php
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/includes/custom-post-types.php
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/includes/form-handler.php
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/includes/meta-boxes.php
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/includes/public/
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/includes/public/public-scripts.php
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/js/
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/js/accordion.js
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/js/custom-admin.js
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/package-lock.json
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/package.json
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/readme.md
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/src/
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/src/.DS_Store
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/src/scss/
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/src/scss/.DS_Store
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/src/scss/abstracts/
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/src/scss/pages/
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/src/scss/pages/.DS_Store
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/src/scss/pages/landing-pages/
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/src/scss/pages/landing-pages/.DS_Store
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/src/scss/pages/landing-pages/tp-landing-page-1/
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/src/scss/pages/landing-pages/tp-landing-page-1/.DS_Store
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/src/scss/pages/landing-pages/tp-landing-page-1/_tp-landing-page1.scss
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/src/scss/pages/landing-pages/tp-landing-page-1/sections/
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/src/scss/pages/landing-pages/tp-landing-page-1/sections/_cta-section.scss
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/src/scss/pages/landing-pages/tp-landing-page-1/sections/_faq-section.scss
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/src/scss/pages/landing-pages/tp-landing-page-1/sections/_hero-section.scss
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/src/scss/pages/landing-pages/tp-landing-page-1/sections/_navbar-section.scss
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/src/scss/pages/landing-pages/tp-landing-page-1/sections/_testimonial-section.scss
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/src/scss/pages/landing-pages/tp-landing-page-1/sections/_video-section.scss
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/src/scss/style.scss
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/tailored-pages-context.txt
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/tailored-pages.php
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/templates/
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/templates/.DS_Store
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/templates/landing-pages/
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/templates/landing-pages/.DS_Store
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/templates/landing-pages/tp-landing-page-1/
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/templates/landing-pages/tp-landing-page-1/cta-section.php
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/templates/landing-pages/tp-landing-page-1/faq-section.php
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/templates/landing-pages/tp-landing-page-1/hero-section.php
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/templates/landing-pages/tp-landing-page-1/navbar-section.php
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/templates/landing-pages/tp-landing-page-1.php
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/templates/listing-pages/
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/templates/listing-pages/tp-listing-page-1.php
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/templates/success-pages/
/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/templates/success-pages/tp-success-page-1.php



====================

/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/tailored-pages.php

<?php
/**
 * Plugin Name: Tailored Pages
 * Description: A plugin to create and manage custom post types for brands, landing pages, brochures, and listing pages.
 * Version: 0.1
 * Author: Andries Bester
 */

// Include necessary files
require_once plugin_dir_path(__FILE__) . 'includes/admin/admin-menus.php';
require_once plugin_dir_path(__FILE__) . 'includes/custom-post-types.php';
require_once plugin_dir_path(__FILE__) . 'includes/public/public-scripts.php';
require_once plugin_dir_path(__FILE__) . 'includes/meta-boxes.php';
require_once plugin_dir_path(__FILE__) . 'includes/custom-columns.php';
require_once plugin_dir_path(__FILE__) . 'includes/form-handler.php';

// Custom table creation on plugin activation
register_activation_hook(__FILE__, 'tp_create_custom_table');

// Include the selected template
function tp_include_template($template) {
    if (is_singular(['brochure', 'landing-page', 'listing-page', 'success-page'])) {
        global $post;
        $selected_template = get_post_meta($post->ID, '_tp_selected_template', true);
        if ($selected_template) {
            $template_directory = '';
            $template_file = $selected_template . '.php';
            if (strpos($selected_template, 'landing-page') !== false) {
                $template_directory = 'landing-pages';
            } elseif (strpos($selected_template, 'brochure') !== false) {
                $template_directory = 'brochures';
            } elseif (strpos($selected_template, 'listing-page') !== false) {
                $template_directory = 'listing-pages';
            } elseif (strpos($selected_template, 'success-page') !== false) {
                $template_directory = 'success-pages';
            }

            $template_path = plugin_dir_path(__FILE__) . 'templates/' . $template_directory . '/' . $template_file;
            if (file_exists($template_path)) {
                error_log('Using custom template: ' . $template_path);
                return $template_path;
            } else {
                error_log('Template file does not exist: ' . $template_path);
            }
        } else {
            error_log('No custom template selected.');
        }
    } else {
        error_log('Not a singular custom post type.');
    }
    return $template;
}
add_filter('template_include', 'tp_include_template');

function tp_enqueue_admin_scripts($hook) {
    if ('post.php' != $hook && 'post-new.php' != $hook) {
        return;
    }

    global $post;
    if ('landing-page' !== $post->post_type) {
        return;
    }

    wp_enqueue_script(
        'tailored-pages-admin-js',
        plugins_url('js/custom-admin.js', __FILE__),
        array('jquery'),
        filemtime(plugin_dir_path(__FILE__) . 'js/custom-admin.js'),
        true
    );

    $associated_brand = get_field('associated_brand', $post->ID);

    $primary_color = '';
    $secondary_color = '';
    $tertiary_color = '';
    $quaternary_color = '';
    $quinary_color = '';

    if ($associated_brand) {
        $brand_id = is_array($associated_brand) ? $associated_brand[0]->ID : $associated_brand->ID;

        $primary_color = get_field('primary_color', $brand_id);
        $secondary_color = get_field('secondary_color', $brand_id);
        $tertiary_color = get_field('tertiary_color', $brand_id);
        $quaternary_color = get_field('quaternary_color', $brand_id);
        $quinary_color = get_field('quinary_color', $brand_id);
    }

    wp_localize_script('tailored-pages-admin-js', 'tpColors', array(
        'primary_color' => $primary_color,
        'secondary_color' => $secondary_color,
        'tertiary_color' => $tertiary_color,
        'quaternary_color' => $quaternary_color,
        'quinary_color' => $quinary_color,
    ));
}
add_action('admin_enqueue_scripts', 'tp_enqueue_admin_scripts');

add_action('after_setup_theme', 'custom_image_sizes');
function custom_image_sizes() {
    add_image_size('hero-background', 1920, 1080, true); // Example size, adjust as needed
}


====================

/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/includes/admin/admin-menus.php

<?php 
// Create Parent Menu
function tp_create_parent_menu() {
    add_menu_page(
        __( 'Tailored Pages', 'text_domain' ),
        __( 'Tailored Pages', 'text_domain' ),
        'manage_options',
        'tailored-pages',
        '',
        'dashicons-admin-generic',
        6
    );
}
add_action( 'admin_menu', 'tp_create_parent_menu' );

====================

/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/includes/custom-post-types.php

<?php
// Register Custom Post Types
function tp_register_custom_post_types() {

    // Register Brand Post Type
    $labels = array(
        'name'                  => _x( 'Brands', 'Post Type General Name', 'text_domain' ),
        'singular_name'         => _x( 'Brand', 'Post Type Singular Name', 'text_domain' ),
        'menu_name'             => __( 'Brands', 'text_domain' ),
        'name_admin_bar'        => __( 'Brand', 'text_domain' ),
        'archives'              => __( 'Brand Archives', 'text_domain' ),
        'attributes'            => __( 'Brand Attributes', 'text_domain' ),
        'parent_item_colon'     => __( 'Parent Brand:', 'text_domain' ),
        'all_items'             => __( 'All Brands', 'text_domain' ),
        'add_new_item'          => __( 'Add New Brand', 'text_domain' ),
        'add_new'               => __( 'Add New', 'text_domain' ),
        'new_item'              => __( 'New Brand', 'text_domain' ),
        'edit_item'             => __( 'Edit Brand', 'text_domain' ),
        'update_item'           => __( 'Update Brand', 'text_domain' ),
        'view_item'             => __( 'View Brand', 'text_domain' ),
        'view_items'            => __( 'View Brands', 'text_domain' ),
        'search_items'          => __( 'Search Brand', 'text_domain' ),
        'not_found'             => __( 'Not found', 'text_domain' ),
        'not_found_in_trash'    => __( 'Not found in Trash', 'text_domain' ),
        'featured_image'        => __( 'Featured Image', 'text_domain' ),
        'set_featured_image'    => __( 'Set featured image', 'text_domain' ),
        'remove_featured_image' => __( 'Remove featured image', 'text_domain' ),
        'use_featured_image'    => __( 'Use as featured image', 'text_domain' ),
        'insert_into_item'      => __( 'Insert into brand', 'text_domain' ),
        'uploaded_to_this_item' => __( 'Uploaded to this brand', 'text_domain' ),
        'items_list'            => __( 'Brands list', 'text_domain' ),
        'items_list_navigation' => __( 'Brands list navigation', 'text_domain' ),
        'filter_items_list'     => __( 'Filter brands list', 'text_domain' ),
    );
    $args = array(
        'label'                 => __( 'Brand', 'text_domain' ),
        'description'           => __( 'Post Type Description', 'text_domain' ),
        'labels'                => $labels,
        'supports'              => array( 'title', 'editor', 'thumbnail' ),
        'hierarchical'          => false,
        'public'                => true,
        'show_ui'               => true,
        'show_in_menu'          => 'tailored-pages',
        'menu_position'         => 6,
        'menu_icon'             => 'dashicons-store',
        'show_in_admin_bar'     => true,
        'show_in_nav_menus'     => true,
        'can_export'            => true,
        'has_archive'           => true,
        'exclude_from_search'   => false,
        'publicly_queryable'    => true,
        'capability_type'       => 'post',
    );
    register_post_type( 'brand', $args );

    // Register Listing Page Post Type
    $labels = array(
        'name'                  => _x( 'Listing Pages', 'Post Type General Name', 'text_domain' ),
        'singular_name'         => _x( 'Listing Page', 'Post Type Singular Name', 'text_domain' ),
        'menu_name'             => __( 'Listing Pages', 'text_domain' ),
        'name_admin_bar'        => __( 'Listing Page', 'text_domain' ),
        'archives'              => __( 'Listing Page Archives', 'text_domain' ),
        'attributes'            => __( 'Listing Page Attributes', 'text_domain' ),
        'parent_item_colon'     => __( 'Parent Listing Page:', 'text_domain' ),
        'all_items'             => __( 'All Listing Pages', 'text_domain' ),
        'add_new_item'          => __( 'Add New Listing Page', 'text_domain' ),
        'add_new'               => __( 'Add New', 'text_domain' ),
        'new_item'              => __( 'New Listing Page', 'text_domain' ),
        'edit_item'             => __( 'Edit Listing Page', 'text_domain' ),
        'update_item'           => __( 'Update Listing Page', 'text_domain' ),
        'view_item'             => __( 'View Listing Page', 'text_domain' ),
        'view_items'            => __( 'View Listing Pages', 'text_domain' ),
        'search_items'          => __( 'Search Listing Page', 'text_domain' ),
        'not_found'             => __( 'Not found', 'text_domain' ),
        'not_found_in_trash'    => __( 'Not found in Trash', 'text_domain' ),
        'featured_image'        => __( 'Featured Image', 'text_domain' ),
        'set_featured_image'    => __( 'Set featured image', 'text_domain' ),
        'remove_featured_image' => __( 'Remove featured image', 'text_domain' ),
        'use_featured_image'    => __( 'Use as featured image', 'text_domain' ),
        'insert_into_item'      => __( 'Insert into listing page', 'text_domain' ),
        'uploaded_to_this_item' => __( 'Uploaded to this listing page', 'text_domain' ),
        'items_list'            => __( 'Listing Pages list', 'text_domain' ),
        'items_list_navigation' => __( 'Listing Pages list navigation', 'text_domain' ),
        'filter_items_list'     => __( 'Filter listing pages list', 'text_domain' ),
    );
    $args = array(
        'label'                 => __( 'Listing Page', 'text_domain' ),
        'description'           => __( 'Post Type Description', 'text_domain' ),
        'labels'                => $labels,
        'supports'              => array( 'title', 'editor', 'thumbnail' ),
        'hierarchical'          => false,
        'public'                => true,
        'show_ui'               => true,
        'show_in_menu'          => 'tailored-pages',
        'menu_position'         => 7,
        'menu_icon'             => 'dashicons-list-view',
        'show_in_admin_bar'     => true,
        'show_in_nav_menus'     => true,
        'can_export'            => true,
        'has_archive'           => true,
        'exclude_from_search'   => false,
        'publicly_queryable'    => true,
        'capability_type'       => 'post',
    );
    register_post_type( 'listing-page', $args );

    // Register Landing Page Post Type
    $labels = array(
        'name'                  => _x( 'Landing Pages', 'Post Type General Name', 'text_domain' ),
        'singular_name'         => _x( 'Landing Page', 'Post Type Singular Name', 'text_domain' ),
        'menu_name'             => __( 'Landing Pages', 'text_domain' ),
        'name_admin_bar'        => __( 'Landing Page', 'text_domain' ),
        'archives'              => __( 'Landing Page Archives', 'text_domain' ),
        'attributes'            => __( 'Landing Page Attributes', 'text_domain' ),
        'parent_item_colon'     => __( 'Parent Landing Page:', 'text_domain' ),
        'all_items'             => __( 'All Landing Pages', 'text_domain' ),
        'add_new_item'          => __( 'Add New Landing Page', 'text_domain' ),
        'add_new'               => __( 'Add New', 'text_domain' ),
        'new_item'              => __( 'New Landing Page', 'text_domain' ),
        'edit_item'             => __( 'Edit Landing Page', 'text_domain' ),
        'update_item'           => __( 'Update Landing Page', 'text_domain' ),
        'view_item'             => __( 'View Landing Page', 'text_domain' ),
        'view_items'            => __( 'View Landing Pages', 'text_domain' ),
        'search_items'          => __( 'Search Landing Page', 'text_domain' ),
        'not_found'             => __( 'Not found', 'text_domain' ),
        'not_found_in_trash'    => __( 'Not found in Trash', 'text_domain' ),
        'featured_image'        => __( 'Featured Image', 'text_domain' ),
        'set_featured_image'    => __( 'Set featured image', 'text_domain' ),
        'remove_featured_image' => __( 'Remove featured image', 'text_domain' ),
        'use_featured_image'    => __( 'Use as featured image', 'text_domain' ),
        'insert_into_item'      => __( 'Insert into landing page', 'text_domain' ),
        'uploaded_to_this_item' => __( 'Uploaded to this landing page', 'text_domain' ),
        'items_list'            => __( 'Landing Pages list', 'text_domain' ),
        'items_list_navigation' => __( 'Landing Pages list navigation', 'text_domain' ),
        'filter_items_list'     => __( 'Filter landing pages list', 'text_domain' ),
    );
    $args = array(
        'label'                 => __( 'Landing Page', 'text_domain' ),
        'description'           => __( 'Post Type Description', 'text_domain' ),
        'labels'                => $labels,
        'supports'              => array( 'title', 'editor', 'thumbnail' ),
        'hierarchical'          => false,
        'public'                => true,
        'show_ui'               => true,
        'show_in_menu'          => 'tailored-pages',
        'menu_position'         => 8,
        'menu_icon'             => 'dashicons-admin-page',
        'show_in_admin_bar'     => true,
        'show_in_nav_menus'     => true,
        'can_export'            => true,
        'has_archive'           => true,
        'exclude_from_search'   => false,
        'publicly_queryable'    => true,
        'capability_type'       => 'post',
    );
    register_post_type( 'landing-page', $args );

    // Register Success Page Post Type
    $labels = array(
        'name'                  => _x( 'Success Pages', 'Post Type General Name', 'text_domain' ),
        'singular_name'         => _x( 'Success Page', 'Post Type Singular Name', 'text_domain' ),
        'menu_name'             => __( 'Success Pages', 'text_domain' ),
        'name_admin_bar'        => __( 'Success Page', 'text_domain' ),
        'archives'              => __( 'Success Page Archives', 'text_domain' ),
        'attributes'            => __( 'Success Page Attributes', 'text_domain' ),
        'parent_item_colon'     => __( 'Parent Success Page:', 'text_domain' ),
        'all_items'             => __( 'All Success Pages', 'text_domain' ),
        'add_new_item'          => __( 'Add New Success Page', 'text_domain' ),
        'add_new'               => __( 'Add New', 'text_domain' ),
        'new_item'              => __( 'New Success Page', 'text_domain' ),
        'edit_item'             => __( 'Edit Success Page', 'text_domain' ),
        'update_item'           => __( 'Update Success Page', 'text_domain' ),
        'view_item'             => __( 'View Success Page', 'text_domain' ),
        'view_items'            => __( 'View Success Pages', 'text_domain' ),
        'search_items'          => __( 'Search Success Page', 'text_domain' ),
        'not_found'             => __( 'Not found', 'text_domain' ),
        'not_found_in_trash'    => __( 'Not found in Trash', 'text_domain' ),
        'featured_image'        => __( 'Featured Image', 'text_domain' ),
        'set_featured_image'    => __( 'Set featured image', 'text_domain' ),
        'remove_featured_image' => __( 'Remove featured image', 'text_domain' ),
        'use_featured_image'    => __( 'Use as featured image', 'text_domain' ),
        'insert_into_item'      => __( 'Insert into success page', 'text_domain' ),
        'uploaded_to_this_item' => __( 'Uploaded to this success page', 'text_domain' ),
        'items_list'            => __( 'Success Pages list', 'text_domain' ),
        'items_list_navigation' => __( 'Success Pages list navigation', 'text_domain' ),
        'filter_items_list'     => __( 'Filter success pages list', 'text_domain' ),
    );
    $args = array(
        'label'                 => __( 'Success Page', 'text_domain' ),
        'description'           => __( 'Post Type Description', 'text_domain' ),
        'labels'                => $labels,
        'supports'              => array( 'title', 'editor', 'thumbnail' ),
        'hierarchical'          => false,
        'public'                => true,
        'show_ui'               => true,
        'show_in_menu'          => 'tailored-pages',
        'menu_position'         => 9,
        'menu_icon'             => 'dashicons-format-aside',
        'show_in_admin_bar'     => true,
        'show_in_nav_menus'     => true,
        'can_export'            => true,
        'has_archive'           => true,
        'exclude_from_search'   => false,
        'publicly_queryable'    => true,
        'capability_type'       => 'post',
    );
    register_post_type( 'success-page', $args );

}
add_action( 'init', 'tp_register_custom_post_types', 0 );
?>


====================

/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/includes/public/public-scripts.php

<?php
// Enqueue the compiled CSS file
function tp_enqueue_styles() {
    wp_enqueue_style(
        'tailored-pages-styles',
        plugins_url('../../dist/css/style.css', __FILE__), // Path adjusted
        array(),
        filemtime(plugin_dir_path(__FILE__) . '../../dist/css/style.css') // Path adjusted
    );
}
add_action('wp_enqueue_scripts', 'tp_enqueue_styles');

// Enqueue accordion.js file for the front end
function tp_enqueue_accordion_script() {
    wp_enqueue_script(
        'tp-accordion-js',
        plugins_url('../../js/accordion.js', __FILE__), // Path adjusted
        array('jquery'),
        filemtime(plugin_dir_path(__FILE__) . '../../js/accordion.js'), // Path adjusted
        true
    );
}
add_action('wp_enqueue_scripts', 'tp_enqueue_accordion_script');
?>


====================

/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/includes/meta-boxes.php

<?php
// Add Meta Box for Template Selection
function tp_add_template_meta_box() {
    $screens = ['success-page', 'landing-page', 'listing-page'];
    foreach ($screens as $screen) {
        add_meta_box(
            'tp_template_selection',
            'Template Selection',
            'tp_template_meta_box_callback',
            $screen,
            'side'
        );
    }
}
add_action('add_meta_boxes', 'tp_add_template_meta_box');

function tp_template_meta_box_callback($post) {
    $value = get_post_meta($post->ID, '_tp_selected_template', true);

    $options = [];
    if ($post->post_type === 'landing-page') {
        $options = ['tp-landing-page-1' => 'Landing Page Template 1'];
    } elseif ($post->post_type === 'success-page') {
        $options = ['tp-success-page-1' => 'Success Page Template 1'];
    } elseif ($post->post_type === 'listing-page') {
        $options = ['tp-listing-page-1' => 'Listing Page Template 1'];
    }

    ?>
    <label for="tp_template_field">Select Template:</label>
    <select name="tp_template_field" id="tp_template_field">
        <option value="">Default Template</option>
        <?php foreach ($options as $template_value => $template_name): ?>
            <option value="<?php echo esc_attr($template_value); ?>" <?php selected($value, $template_value); ?>><?php echo esc_html($template_name); ?></option>
        <?php endforeach; ?>
    </select>
    <?php
}

// Save the selected template
function tp_save_template_meta_box($post_id) {
    if (array_key_exists('tp_template_field', $_POST)) {
        update_post_meta(
            $post_id,
            '_tp_selected_template',
            $_POST['tp_template_field']
        );
    }
}
add_action('save_post', 'tp_save_template_meta_box');
?>


====================

/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/includes/custom-columns.php

<?php 
// Modify the query to filter by brand
function tp_filter_by_assigned_brand($query) {
    // Only modify the main query in the admin area
    if (is_admin() && $query->is_main_query() && !empty($_GET['brand_filter'])) {
        $meta_query = array(
            array(
                'key' => 'associated_brand',
                'value' => sanitize_text_field($_GET['brand_filter']),
                'compare' => 'LIKE'
            )
        );
        $query->set('meta_query', $meta_query);
    }
}
add_action('pre_get_posts', 'tp_filter_by_assigned_brand');


// Add custom columns to Listing Page post type
function tp_add_listing_page_columns($columns) {
    $new_columns = array();
    foreach ($columns as $key => $value) {
        if ($key == 'title') {
            $new_columns[$key] = $value;
            $new_columns['assigned_brand'] = __('Assigned Brand', 'text_domain');
        } else {
            $new_columns[$key] = $value;
        }
    }
    return $new_columns;
}
add_filter('manage_listing-page_posts_columns', 'tp_add_listing_page_columns');

// Populate custom columns for Listing Page post type
function tp_custom_listing_page_column($column, $post_id) {
    if ($column === 'assigned_brand') {
        $associated_brand = get_post_meta($post_id, 'associated_brand', true);
        if ($associated_brand) {
            if (is_array($associated_brand)) {
                $associated_brand = $associated_brand[0]; // If it is an array, get the first element
            }
            $brand_title = get_the_title($associated_brand);
            $brand_filter_link = add_query_arg(array('post_type' => 'listing-page', 'brand_filter' => $associated_brand), admin_url('edit.php'));
            echo '<a href="' . esc_url($brand_filter_link) . '">' . esc_html($brand_title) . '</a>';
        } else {
            echo __('No Brand Assigned', 'text_domain');
        }
    }
}
add_action('manage_listing-page_posts_custom_column', 'tp_custom_listing_page_column', 10, 2);

// Add custom columns to Landing Page post type
function tp_add_landing_page_columns($columns) {
    $new_columns = array();
    foreach ($columns as $key => $value) {
        if ($key == 'title') {
            $new_columns[$key] = $value;
            $new_columns['assigned_brand'] = __('Assigned Brand', 'text_domain');
        } else {
            $new_columns[$key] = $value;
        }
    }
    return $new_columns;
}
add_filter('manage_landing-page_posts_columns', 'tp_add_landing_page_columns');

// Populate custom columns for Landing Page post type
function tp_custom_landing_page_column($column, $post_id) {
    if ($column === 'assigned_brand') {
        $associated_brand = get_post_meta($post_id, 'associated_brand', true);
        if ($associated_brand) {
            if (is_array($associated_brand)) {
                $associated_brand = $associated_brand[0]; // If it is an array, get the first element
            }
            $brand_title = get_the_title($associated_brand);
            $brand_filter_link = add_query_arg(array('post_type' => 'landing-page', 'brand_filter' => $associated_brand), admin_url('edit.php'));
            echo '<a href="' . esc_url($brand_filter_link) . '">' . esc_html($brand_title) . '</a>';
        } else {
            echo __('No Brand Assigned', 'text_domain');
        }
    }
}
add_action('manage_landing-page_posts_custom_column', 'tp_custom_landing_page_column', 10, 2);


====================

/Applications/MAMP/htdocs/andries/wp-content/plugins/tailored-pages/includes/form-handler.php

<?php 
function tp_handle_form_submission() {
    if (isset($_POST['action']) && $_POST['action'] === 'submit_landing_page_form') {
        global $wpdb;

        // Sanitize and process form input
        $first_name = sanitize_text_field($_POST['first_name']);
        $last_name = sanitize_text_field($_POST['last_name']);
        $email_address = sanitize_email($_POST['email_address']);
        $marketing_consent = isset($_POST['marketing_consent']) ? 1 : 0;
        $time = current_time('mysql');
        $landing_page_id = intval($_POST['landing_page_id']);

        // Insert data into custom table
        $table_name = $wpdb->prefix . 'tp_leads';
        $wpdb->insert(
            $table_name,
            array(
                'time' => $time,
                'first_name' => $first_name,
                'last_name' => $last_name,
                'email_address' => $email_address,
                'marketing_consent' => $marketing_consent,
            )
        );

        // Check if there's a cached success page URL
        $cache_key = 'success_page_' . $landing_page_id;
        $success_page_url = get_transient($cache_key);

        if ($success_page_url === false) {
            // Query for the success page that has this landing page selected in its ACF field
            $success_page_query = new WP_Query(array(
                'post_type' => 'success-page',
                'meta_query' => array(
                    array(
                        'key' => 'landing_page_source', // ACF field name
                        'value' => '"' . $landing_page_id . '"',
                        'compare' => 'LIKE'
                    )
                )
            ));

            if ($success_page_query->have_posts()) {
                $success_page_query->the_post();
                $success_page_url = get_permalink();
                wp_reset_postdata();
                // Cache the success page URL for 12 hours
                set_transient($cache_key, $success_page_url, 12 * HOUR_IN_SECONDS);
            } else {
                $success_page_url = home_url('/');
            }
        }

        // Redirect after processing
        wp_redirect($success_page_url);
        exit;
    }
}
add_action('admin_post_nopriv_submit_landing_page_form', 'tp_handle_form_submission');
add_action('admin_post_submit_landing_page_form', 'tp_handle_form_submission');

// Custom table creation function
function tp_create_custom_table() {
    global $wpdb;
    $table_name = $wpdb->prefix . 'tp_leads';
    $charset_collate = $wpdb->get_charset_collate();

    $sql = "CREATE TABLE $table_name (
        id mediumint(9) NOT NULL AUTO_INCREMENT,
        time datetime DEFAULT '0000-00-00 00:00:00' NOT NULL,
        first_name tinytext NOT NULL,
        last_name tinytext NOT NULL,
        email_address varchar(100) NOT NULL,
        marketing_consent boolean DEFAULT false NOT NULL,
        PRIMARY KEY  (id)
    ) $charset_collate;";

    require_once(ABSPATH . 'wp-admin/includes/upgrade.php');
    dbDelta($sql);

    if ($wpdb->last_error) {
        error_log('Custom Table Creation Error: ' . $wpdb->last_error);
    } else {
        error_log('Custom Table Created Successfully: ' . $table_name);
    }
}

function tp_register_export_page() {
    add_submenu_page(
        'edit.php?post_type=landing-page',
        __('Export Leads', 'text_domain'),
        __('Export Leads', 'text_domain'),
        'manage_options',
        'export-leads',
        'tp_export_leads_page'
    );
}
add_action('admin_menu', 'tp_register_export_page');

function tp_export_leads_page() {
    ?>
    <div class="wrap">
        <h1><?php _e('Export Leads', 'text_domain'); ?></h1>
        <form method="post" action="">
            <input type="hidden" name="tp_export_csv" value="1">
            <?php submit_button(__('Export to CSV', 'text_domain')); ?>
        </form>
    </div>
    <?php
}

function tp_export_leads() {
    if (isset($_POST['tp_export_csv']) && current_user_can('manage_options')) {
        global $wpdb;
        $table_name = $wpdb->prefix . 'tp_leads';

        $results = $wpdb->get_results("SELECT * FROM $table_name", ARRAY_A);

        if (!empty($results)) {
            header('Content-Type: text/csv; charset=utf-8');
            header('Content-Disposition: attachment; filename=leads.csv');
            $output = fopen('php://output', 'w');
            fputcsv($output, array('ID', 'Time', 'First Name', 'Last Name', 'Email Address', 'Marketing Consent'));

            foreach ($results as $row) {
                fputcsv($output, $row);
            }

            fclose($output);
            exit;
        }
    }
}
add_action('admin_init', 'tp_export_leads');
